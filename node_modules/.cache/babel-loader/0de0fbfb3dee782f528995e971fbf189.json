{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Orders.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/admin/Header';\nimport Nav from '../../components/admin/NavAdmin';\nimport TaskBar from '../../components/admin/TaskBar';\nimport { connect } from 'react-redux';\nimport { actGetAllOrderRequestAdmin, actFilterOrdersRequest } from '../../actions/index';\nimport { Container, Row, Col, Table } from 'reactstrap';\nimport '../../css/admin/Orders.css';\nimport { Redirect } from 'react-router-dom';\n\nclass Orders extends Component {\n  constructor(pros) {\n    super(pros);\n\n    this.getKeywordOrders = keyword => {\n      console.log(keyword);\n      this.setState({\n        keyword_email: keyword\n      });\n    };\n\n    this.getFilterOrders = (payment, amount) => {\n      console.log(payment, amount);\n      this.setState({\n        payment: payment,\n        amount: amount\n      });\n    };\n\n    this.paginate = number => {\n      this.setState({\n        currentPage: number\n      });\n    };\n\n    this.state = {\n      payment: '',\n      amount: '',\n      keyword_email: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAllOrders();\n  } // showProducts = (products) => {\n  //     let result = null\n  //     if (products.length > 0) {\n  //         result = products.map((product, index) => {\n  //             return <Product key={index} product={product} type=\"admin\" />\n  //         })\n  //     }\n  //     return result\n  // }\n\n\n  render() {\n    let adminToken = localStorage.getItem('adminToken');\n\n    if (!adminToken) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let {\n      orders,\n      onFilterOrders\n    } = this.props;\n    let {\n      payment,\n      amount,\n      keyword_email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      match: this.props.match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AdminProducts admin-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col mb-4 pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TaskBar, {\n      type: \"Orders\",\n      onFilterOrders: onFilterOrders,\n      getKeywordOrders: this.getKeywordOrders,\n      getFilterOrders: this.getFilterOrders,\n      payment: payment,\n      amount: amount,\n      keyword_email: keyword_email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col p-0\",\n      style: {\n        overflow: \"auto\",\n        maxHeight: \"450px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"admin-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 49\n      }\n    }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }, \"Order Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 49\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 49\n      }\n    }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 49\n      }\n    }, \"Customer's Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 49\n      }\n    }, \"Delivery Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, orders.map((order, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 57\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 57\n      }\n    }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 57\n      }\n    }, order.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 57\n      }\n    }, \"$\", order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }\n    }, order.payment === 'cash' ? 'Cash On Delivery' : 'Online Payment'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 57\n      }\n    }, order.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 57\n      }\n    }, order.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 57\n      }\n    }, order.address)))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetAllOrders: () => {\n      dispatch(actGetAllOrderRequestAdmin());\n    },\n    onFilterOrders: (payment_method, amount, email) => {\n      dispatch(actFilterOrdersRequest(payment_method, amount, email));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Orders.js"],"names":["React","Component","Header","Nav","TaskBar","connect","actGetAllOrderRequestAdmin","actFilterOrdersRequest","Container","Row","Col","Table","Redirect","Orders","constructor","pros","getKeywordOrders","keyword","console","log","setState","keyword_email","getFilterOrders","payment","amount","paginate","number","currentPage","state","componentDidMount","props","onGetAllOrders","render","adminToken","localStorage","getItem","orders","onFilterOrders","match","padding","overflow","maxHeight","map","order","index","_id","date","totalPrice","email","phone","address","mapStateToProps","mapDispatchToProps","dispatch","payment_method"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,EAAqCC,sBAArC,QAAmE,qBAAnE;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,YAA3C;AACA,OAAO,4BAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAC3Ba,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;;AADc,SASlBC,gBATkB,GASEC,OAAD,IAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAEJ;AADL,OAAd;AAGH,KAdiB;;AAAA,SAgBlBK,eAhBkB,GAgBA,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCN,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EAAqBC,MAArB;AACA,WAAKJ,QAAL,CAAc;AACVG,QAAAA,OAAO,EAAEA,OADC;AAEVC,QAAAA,MAAM,EAAEA;AAFE,OAAd;AAIH,KAtBiB;;AAAA,SAsClBC,QAtCkB,GAsCNC,MAAD,IAAY;AACnB,WAAKN,QAAL,CAAc;AACVO,QAAAA,WAAW,EAAED;AADH,OAAd;AAGH,KA1CiB;;AAEd,SAAKE,KAAL,GAAa;AACTL,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTH,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAiBDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,cAAX;AACH,GA3B0B,CA6B3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQAC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACb,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAI;AAAEG,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAA6B,KAAKP,KAAtC;AACA,QAAI;AAAEP,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBH,MAAAA;AAAnB,QAAqC,KAAKO,KAA9C;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,cAAc,EAAEF,cAFpB;AAGI,MAAA,gBAAgB,EAAE,KAAKrB,gBAH3B;AAII,MAAA,eAAe,EAAE,KAAKM,eAJ1B;AAKI,MAAA,OAAO,EAAEC,OALb;AAMI,MAAA,MAAM,EAAEC,MANZ;AAOI,MAAA,aAAa,EAAEH,aAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,eAcI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,MADP;AAEHC,QAAAA,SAAS,EAAE;AAFR,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CADJ,CADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQL,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACP;AAAI,MAAA,GAAG,EAAED,KAAK,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,GAAG,CAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,GAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACG,IAAX,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMH,KAAK,CAACI,UAAZ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACpB,OAAN,KAAkB,MAAlB,GAA2B,kBAA3B,GAAgD,gBAArD,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKoB,KAAK,CAACK,KAAX,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,KAAK,CAACM,KAAX,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,KAAK,CAACO,OAAX,CARJ,CADJ,CAFR,CAbJ,CAPJ,CADJ,CAdJ,CADJ,CADJ,CAHJ,CADJ;AAkEH;;AAtH0B;;AAyH/B,MAAMC,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AACHQ,IAAAA,MAAM,EAAER,KAAK,CAACe;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtB,IAAAA,cAAc,EAAE,MAAM;AAClBsB,MAAAA,QAAQ,CAAC/C,0BAA0B,EAA3B,CAAR;AACH,KAHE;AAIH+B,IAAAA,cAAc,EAAE,CAACiB,cAAD,EAAiB9B,MAAjB,EAAyBwB,KAAzB,KAAmC;AAC/CK,MAAAA,QAAQ,CAAC9C,sBAAsB,CAAC+C,cAAD,EAAiB9B,MAAjB,EAAyBwB,KAAzB,CAAvB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,eAAe3C,OAAO,CAAC8C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvC,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Header from '../../components/admin/Header'\nimport Nav from '../../components/admin/NavAdmin'\nimport TaskBar from '../../components/admin/TaskBar'\nimport { connect } from 'react-redux'\nimport { actGetAllOrderRequestAdmin, actFilterOrdersRequest } from '../../actions/index'\nimport { Container, Row, Col, Table } from 'reactstrap'\nimport '../../css/admin/Orders.css'\nimport { Redirect } from 'react-router-dom'\nclass Orders extends Component {\n    constructor(pros) {\n        super(pros)\n        this.state = {\n            payment: '',\n            amount: '',\n            keyword_email: ''\n        }\n    }\n\n    getKeywordOrders = (keyword) => {\n        console.log(keyword)\n        this.setState({\n            keyword_email: keyword\n        })\n    }\n\n    getFilterOrders = (payment, amount) => {\n        console.log(payment, amount)\n        this.setState({\n            payment: payment,\n            amount: amount\n        })\n    }\n\n    componentDidMount() {\n        this.props.onGetAllOrders()\n    }\n\n    // showProducts = (products) => {\n    //     let result = null\n    //     if (products.length > 0) {\n    //         result = products.map((product, index) => {\n    //             return <Product key={index} product={product} type=\"admin\" />\n    //         })\n    //     }\n    //     return result\n    // }\n\n    paginate = (number) => {\n        this.setState({\n            currentPage: number\n        })\n    }\n\n    render() {\n        let adminToken = localStorage.getItem('adminToken')\n        if (!adminToken) {\n            return <Redirect to=\"/admin/login\" />\n        }\n        let { orders, onFilterOrders } = this.props\n        let { payment, amount, keyword_email } = this.state\n        return (\n            <React.Fragment>\n                <Header />\n                <Nav match={this.props.match} />\n                <div className=\"AdminProducts admin-page\">\n                    <Container>\n                        <React.Fragment>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col className=\"admin-col mb-4 pb-0\">\n                                    <TaskBar\n                                        type=\"Orders\"\n                                        onFilterOrders={onFilterOrders}\n                                        getKeywordOrders={this.getKeywordOrders}\n                                        getFilterOrders={this.getFilterOrders}\n                                        payment={payment}\n                                        amount={amount}\n                                        keyword_email={keyword_email}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col\n                                    className=\"admin-col p-0\"\n                                    style={{\n                                        overflow: \"auto\",\n                                        maxHeight: \"450px\",\n                                    }}\n                                >\n                                    <Table className=\"admin-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Number</th>\n                                                <th>Order Id</th>\n                                                <th>Time</th>\n                                                <th>Amount</th>\n                                                <th>Payment Method</th>\n                                                <th>Customer's Email</th>\n                                                <th>Contact</th>\n                                                <th>Delivery Address</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                orders.map((order, index) =>\n                                                    <tr key={order._id}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{order._id}</td>\n                                                        <td>{order.date}</td>\n                                                        <td>${order.totalPrice}</td>\n                                                        <td>{order.payment === 'cash' ? 'Cash On Delivery' : 'Online Payment'}</td>\n                                                        <td>{order.email}</td>\n                                                        <td>{order.phone}</td>\n                                                        <td>{order.address}</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    </Container>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.order\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetAllOrders: () => {\n            dispatch(actGetAllOrderRequestAdmin())\n        },\n        onFilterOrders: (payment_method, amount, email) => {\n            dispatch(actFilterOrdersRequest(payment_method, amount, email))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)"]},"metadata":{},"sourceType":"module"}