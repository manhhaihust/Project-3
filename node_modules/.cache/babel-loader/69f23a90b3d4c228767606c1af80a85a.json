{"ast":null,"code":"import * as Types from '../constants/ActionTypes';\nlet cartItem = localStorage.getItem('cart');\nlet initialstate = cartItem ? JSON.parse(cartItem) : [];\n\nlet findProductInState = (state, product) => {\n  let index = -1;\n\n  for (let i = 0; i < state.length; i++) {\n    if (state[i].product._id === product._id) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n};\n\nconst cart = (state = initialstate, actions) => {\n  let index = -1;\n  let {\n    product\n  } = actions;\n\n  switch (actions.type) {\n    case Types.ADD_TO_CART:\n      index = findProductInState(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += 1;\n      } else {\n        state.push({\n          product,\n          quantity: 1\n        });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state));\n      return [...state];\n\n    case Types.DECREASE_CART:\n      index = findProductInState(state, product);\n      state[index].quantity -= 1;\n\n      if (state[index].quantity === 0) {\n        state.splice(index, 1);\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state));\n      return [...state];\n\n    case Types.DELETE_CART:\n      index = findProductInState(state, product);\n      state.splice(index, 1);\n      localStorage.setItem('cart', JSON.stringify(state));\n      return [...state];\n\n    case Types.REMOVE_ALL_CART:\n      state = [];\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/reducers/cart.js"],"names":["Types","cartItem","localStorage","getItem","initialstate","JSON","parse","findProductInState","state","product","index","i","length","_id","cart","actions","type","ADD_TO_CART","quantity","push","setItem","stringify","DECREASE_CART","splice","DELETE_CART","REMOVE_ALL_CART"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AAEA,IAAIC,YAAY,GAAGH,QAAQ,GAAGI,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAH,GAA0B,EAArD;;AAEA,IAAIM,kBAAkB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzC,MAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,QAAIH,KAAK,CAACG,CAAD,CAAL,CAASF,OAAT,CAAiBI,GAAjB,KAAyBJ,OAAO,CAACI,GAArC,EAA0C;AACtCH,MAAAA,KAAK,GAAGC,CAAR;AACA;AACH;AACJ;;AACD,SAAOD,KAAP;AACH,CATD;;AAWA,MAAMI,IAAI,GAAG,CAACN,KAAK,GAAGJ,YAAT,EAAuBW,OAAvB,KAAmC;AAC5C,MAAIL,KAAK,GAAG,CAAC,CAAb;AACA,MAAI;AAAED,IAAAA;AAAF,MAAcM,OAAlB;;AACA,UAAQA,OAAO,CAACC,IAAhB;AACI,SAAKhB,KAAK,CAACiB,WAAX;AACIP,MAAAA,KAAK,GAAGH,kBAAkB,CAACC,KAAD,EAAQC,OAAR,CAA1B;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdF,QAAAA,KAAK,CAACE,KAAD,CAAL,CAAaQ,QAAb,IAAyB,CAAzB;AACH,OAFD,MAGK;AACDV,QAAAA,KAAK,CAACW,IAAN,CAAW;AACPV,UAAAA,OADO;AAEPS,UAAAA,QAAQ,EAAE;AAFH,SAAX;AAIH;;AACDhB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeb,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACsB,aAAX;AACIZ,MAAAA,KAAK,GAAGH,kBAAkB,CAACC,KAAD,EAAQC,OAAR,CAA1B;AACAD,MAAAA,KAAK,CAACE,KAAD,CAAL,CAAaQ,QAAb,IAAyB,CAAzB;;AACA,UAAIV,KAAK,CAACE,KAAD,CAAL,CAAaQ,QAAb,KAA0B,CAA9B,EAAiC;AAC7BV,QAAAA,KAAK,CAACe,MAAN,CAAab,KAAb,EAAoB,CAApB;AACH;;AACDR,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeb,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACwB,WAAX;AACId,MAAAA,KAAK,GAAGH,kBAAkB,CAACC,KAAD,EAAQC,OAAR,CAA1B;AACAD,MAAAA,KAAK,CAACe,MAAN,CAAab,KAAb,EAAoB,CAApB;AACAR,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeb,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACyB,eAAX;AACIjB,MAAAA,KAAK,GAAG,EAAR;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ;AACI,aAAOA,KAAP;AA/BR;AAiCH,CApCD;;AAsCA,eAAeM,IAAf","sourcesContent":["import * as Types from '../constants/ActionTypes'\n\nlet cartItem = localStorage.getItem('cart')\n\nlet initialstate = cartItem ? JSON.parse(cartItem) : []\n\nlet findProductInState = (state, product) => {\n    let index = -1\n    for (let i = 0; i < state.length; i++) {\n        if (state[i].product._id === product._id) {\n            index = i\n            break\n        }\n    }\n    return index\n}\n\nconst cart = (state = initialstate, actions) => {\n    let index = -1\n    let { product } = actions\n    switch (actions.type) {\n        case Types.ADD_TO_CART:\n            index = findProductInState(state, product)\n            if (index !== -1) {\n                state[index].quantity += 1\n            }\n            else {\n                state.push({\n                    product,\n                    quantity: 1\n                })\n            }\n            localStorage.setItem('cart', JSON.stringify(state))\n            return [...state]\n        case Types.DECREASE_CART:\n            index = findProductInState(state, product)\n            state[index].quantity -= 1\n            if (state[index].quantity === 0) {\n                state.splice(index, 1)\n            }\n            localStorage.setItem('cart', JSON.stringify(state))\n            return [...state]\n        case Types.DELETE_CART:\n            index = findProductInState(state, product)\n            state.splice(index, 1)\n            localStorage.setItem('cart', JSON.stringify(state))\n            return [...state]\n        case Types.REMOVE_ALL_CART:\n            state = []\n            return [...state]\n        default:\n            return state\n    }\n}\n\nexport default cart"]},"metadata":{},"sourceType":"module"}