{"ast":null,"code":"import * as Types from '../constants/ActionTypes'; // let orders = localStorage.getItem('orders')\n// let initialstate = orders ? JSON.parse(orders) : []\n\nlet initialstate = [];\n\nconst order = (state = initialstate, actions) => {\n  let {\n    order,\n    orders\n  } = actions;\n\n  switch (actions.type) {\n    case Types.CREATE_ORDER:\n      state.push(order);\n      console.log(state); // localStorage.setItem('orders', JSON.stringify(state))\n\n      return [...state];\n\n    case Types.GET_ALL_ORDER:\n      console.log(orders);\n      state = orders;\n      console.log(state);\n      return [...state];\n\n    case Types.GET_ALL_ORDER_ADMIN:\n      state = orders;\n      return [...state];\n\n    case Types.FILTER_ORDERS:\n      state = orders;\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nexport default order;","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/reducers/order.js"],"names":["Types","initialstate","order","state","actions","orders","type","CREATE_ORDER","push","console","log","GET_ALL_ORDER","GET_ALL_ORDER_ADMIN","FILTER_ORDERS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB,C,CAEA;AAEA;;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAGA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,OAAvB,KAAmC;AAC7C,MAAI;AAAEF,IAAAA,KAAF;AAASG,IAAAA;AAAT,MAAoBD,OAAxB;;AACA,UAAQA,OAAO,CAACE,IAAhB;AACI,SAAKN,KAAK,CAACO,YAAX;AACIJ,MAAAA,KAAK,CAACK,IAAN,CAAWN,KAAX;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAFJ,CAGI;;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACW,aAAX;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAF,MAAAA,KAAK,GAAGE,MAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACY,mBAAX;AACIT,MAAAA,KAAK,GAAGE,MAAR;AACA,aAAO,CAAC,GAAGF,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACa,aAAX;AACIV,MAAAA,KAAK,GAAGE,MAAR;AACA,aAAO,CAAC,GAAGF,KAAJ,CAAP;;AACJ;AACI,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAlBR;AAoBH,CAtBD;;AAwBA,eAAeD,KAAf","sourcesContent":["import * as Types from '../constants/ActionTypes'\n\n// let orders = localStorage.getItem('orders')\n\n// let initialstate = orders ? JSON.parse(orders) : []\n\nlet initialstate = []\n\n\nconst order = (state = initialstate, actions) => {\n    let { order, orders } = actions\n    switch (actions.type) {\n        case Types.CREATE_ORDER:\n            state.push(order)\n            console.log(state)\n            // localStorage.setItem('orders', JSON.stringify(state))\n            return [...state]\n        case Types.GET_ALL_ORDER:\n            console.log(orders)\n            state = orders\n            console.log(state)\n            return [...state]\n        case Types.GET_ALL_ORDER_ADMIN:\n            state = orders\n            return [...state]\n        case Types.FILTER_ORDERS:\n            state = orders\n            return [...state]\n        default:\n            return [...state]\n    }\n}\n\nexport default order"]},"metadata":{},"sourceType":"module"}