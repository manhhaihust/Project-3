{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Customers.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/admin/Header';\nimport Nav from '../../components/admin/NavAdmin';\nimport TaskBar from '../../components/admin/TaskBar';\nimport { Container, Row, Col, Table } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { actGetAllCustomersRequest, actGetAllOrderRequestAdmin, actFilterCustomersRequest } from '../../actions/index';\nimport { Redirect } from 'react-router-dom';\n\nclass Customers extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.totalAmount = arr => {\n      let totalAmount = null;\n      arr.forEach(element => {\n        totalAmount += element.totalPrice;\n      });\n      return totalAmount;\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAllCustomers();\n    this.props.onGetAllOrders();\n  } // paginate = (number) => {\n  //     this.setState({\n  //         currentPage: number\n  //     })\n  // }\n\n\n  render() {\n    let adminToken = localStorage.getItem('adminToken');\n\n    if (!adminToken) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let {\n      customers,\n      orders,\n      onFilterCustomers\n    } = this.props;\n    customers.forEach(customer => {\n      let result = orders.filter(order => order.email === customer.email);\n      let totalOrder = result.length;\n      let totalAmount = this.totalAmount(result);\n      customer.totalOrder = totalOrder;\n      customer.totalAmount = totalAmount;\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      match: this.props.match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AdminProducts admin-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col mb-4 pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TaskBar, {\n      type: \"Customers\",\n      onFilterCustomers: onFilterCustomers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col p-0\",\n      style: {\n        overflow: \"auto\",\n        maxHeight: \"450px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"admin-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 49\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 49\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 49\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }, \"Total Order\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }\n    }, \"Total Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }\n    }, \"Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, customers.map((customer, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: customer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 57\n      }\n    }, customer._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 57\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 57\n      }\n    }, customer.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 57\n      }\n    }, customer.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 57\n      }\n    }, customer.totalOrder ? customer.totalOrder : '0'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 57\n      }\n    }, \"$\", customer.totalAmount ? customer.totalAmount : '0'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 57\n      }\n    }, customer.address)))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    customers: state.customers,\n    orders: state.order,\n    isOpenFormProduct: state.isOpenFormProduct,\n    productEditing: state.productEditing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetAllCustomers: () => {\n      dispatch(actGetAllCustomersRequest());\n    },\n    onGetAllOrders: () => {\n      dispatch(actGetAllOrderRequestAdmin());\n    },\n    onFilterCustomers: name => {\n      dispatch(actFilterCustomersRequest(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Customers.js"],"names":["React","Component","Header","Nav","TaskBar","Container","Row","Col","Table","connect","actGetAllCustomersRequest","actGetAllOrderRequestAdmin","actFilterCustomersRequest","Redirect","Customers","totalAmount","arr","forEach","element","totalPrice","componentDidMount","props","onGetAllCustomers","onGetAllOrders","render","adminToken","localStorage","getItem","customers","orders","onFilterCustomers","customer","result","filter","order","email","totalOrder","length","match","padding","overflow","maxHeight","map","index","_id","name","phone","address","mapStateToProps","state","isOpenFormProduct","productEditing","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from '../../components/admin/Header'\nimport Nav from '../../components/admin/NavAdmin'\nimport TaskBar from '../../components/admin/TaskBar'\nimport { Container, Row, Col, Table } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { \n    actGetAllCustomersRequest, \n    actGetAllOrderRequestAdmin, \n    actFilterCustomersRequest,\n} from '../../actions/index'\nimport { Redirect } from 'react-router-dom'\nclass Customers extends Component {\n\n    componentDidMount() {\n        this.props.onGetAllCustomers()\n        this.props.onGetAllOrders()\n    }\n\n    // paginate = (number) => {\n    //     this.setState({\n    //         currentPage: number\n    //     })\n    // }\n\n    totalAmount = (arr) => {\n        let totalAmount = null\n        arr.forEach(element => {\n            totalAmount += element.totalPrice\n        })\n        return totalAmount\n    }\n\n    render() {\n        let adminToken = localStorage.getItem('adminToken')\n        if (!adminToken) {\n            return <Redirect to=\"/admin/login\" />\n        }\n        let { \n            customers, \n            orders, \n            onFilterCustomers,\n        } = this.props\n        customers.forEach(customer => {\n            let result = orders.filter(order => order.email === customer.email)\n            let totalOrder = result.length\n            let totalAmount = this.totalAmount(result)\n            customer.totalOrder = totalOrder\n            customer.totalAmount = totalAmount\n        });\n        return (\n            <React.Fragment>\n                <Header />\n                <Nav match={this.props.match} />\n                <div className=\"AdminProducts admin-page\">\n                    <Container>\n                        <React.Fragment>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col className=\"admin-col mb-4 pb-0\">\n                                    <TaskBar type=\"Customers\" onFilterCustomers={onFilterCustomers} />\n                                </Col>\n                            </Row>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col\n                                    className=\"admin-col p-0\"\n                                    style={{\n                                        overflow: \"auto\",\n                                        maxHeight: \"450px\",\n                                    }}\n                                >\n                                    <Table className=\"admin-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Number</th>\n                                                <th>Id</th>\n                                                <th>Name</th>\n                                                <th>Contact</th>\n                                                <th>Email</th>\n                                                <th>Total Order</th>\n                                                <th>Total Amount</th>\n                                                <th>Address</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                customers.map((customer, index) =>\n                                                    <tr key={customer._id}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{customer._id}</td>\n                                                        <td>{customer.name}</td>\n                                                        <td>{customer.phone}</td>\n                                                        <td>{customer.email}</td>\n                                                        <td>{customer.totalOrder ? customer.totalOrder : '0'}</td>\n                                                        <td>${customer.totalAmount ? customer.totalAmount : '0'}</td>\n                                                        <td>{customer.address}</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    </Container>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customers: state.customers,\n        orders: state.order,\n        isOpenFormProduct: state.isOpenFormProduct,\n        productEditing: state.productEditing\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetAllCustomers: () => {\n            dispatch(actGetAllCustomersRequest())\n        },\n        onGetAllOrders: () => {\n            dispatch(actGetAllOrderRequestAdmin())\n        },\n        onFilterCustomers: (name) => {\n            dispatch(actFilterCustomersRequest(name))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers)"]},"metadata":{},"sourceType":"module"}