{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Category.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/admin/Header';\nimport Nav from '../../components/admin/NavAdmin';\nimport TaskBar from '../../components/admin/TaskBar';\nimport CategoryFunc from '../../components/admin/CategoryFunc';\nimport { Container, Row, Col, Table } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { actAddCategoryRequest, actDeleteCategoryRequest, actFilterCategoryAdminRequest, actGetAllCategoryRequest, actToggleFormCategory } from '../../actions';\nimport ButtonDelete from '../../components/admin/ButtonDelete';\n\nclass Category extends Component {\n  componentDidMount() {\n    this.props.onGetAllCategory();\n  }\n\n  render() {\n    let {\n      isOpenFormCategory,\n      onToggleFormCategory,\n      category,\n      onAddCategory,\n      onDeleteCategory,\n      onFilterCategory\n    } = this.props; // console.log(category)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      match: this.props.match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), isOpenFormCategory ? /*#__PURE__*/React.createElement(CategoryFunc, {\n      onToggleFormCategory: onToggleFormCategory,\n      onAddCategory: onAddCategory,\n      onToggleFormCategory: onToggleFormCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AdminProducts admin-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col mb-4 pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TaskBar, {\n      type: \"Category\",\n      onToggleFormCategory: onToggleFormCategory,\n      onFilterCategory: onFilterCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"0 15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"admin-col p-0\",\n      style: {\n        overflow: \"auto\",\n        maxHeight: \"450px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"admin-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 49\n      }\n    }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 49\n      }\n    }, \"Category Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 49\n      }\n    }, \"Category Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }\n    }, \"action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }\n    }, category.map((category, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: category._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 57\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 57\n      }\n    }, category._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 57\n      }\n    }, category.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ButtonDelete, {\n      type: \"category\",\n      id: category._id,\n      onDeleteCategory: onDeleteCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 61\n      }\n    }))))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isOpenFormCategory: state.isOpenFormCategory,\n    category: state.category\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleFormCategory: () => {\n      dispatch(actToggleFormCategory());\n    },\n    onGetAllCategory: () => {\n      dispatch(actGetAllCategoryRequest());\n    },\n    onAddCategory: data => {\n      dispatch(actAddCategoryRequest(data));\n    },\n    onDeleteCategory: id => {\n      dispatch(actDeleteCategoryRequest(id));\n    },\n    onFilterCategory: name => {\n      dispatch(actFilterCategoryAdminRequest(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/pages/admin/Category.js"],"names":["React","Component","Header","Nav","TaskBar","CategoryFunc","Container","Row","Col","Table","connect","actAddCategoryRequest","actDeleteCategoryRequest","actFilterCategoryAdminRequest","actGetAllCategoryRequest","actToggleFormCategory","ButtonDelete","Category","componentDidMount","props","onGetAllCategory","render","isOpenFormCategory","onToggleFormCategory","category","onAddCategory","onDeleteCategory","onFilterCategory","match","padding","overflow","maxHeight","map","index","_id","name","mapStateToProps","state","mapDispatchToProps","dispatch","data","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../components/admin/Header'\nimport Nav from '../../components/admin/NavAdmin'\nimport TaskBar from '../../components/admin/TaskBar'\nimport CategoryFunc from '../../components/admin/CategoryFunc'\nimport { Container, Row, Col, Table } from 'reactstrap'\nimport { connect } from 'react-redux';\nimport {actAddCategoryRequest, actDeleteCategoryRequest, actFilterCategoryAdminRequest, actGetAllCategoryRequest, actToggleFormCategory} from '../../actions'\nimport ButtonDelete from '../../components/admin/ButtonDelete'\n\nclass Category extends Component {\n    componentDidMount() {\n        this.props.onGetAllCategory()\n    }\n\n    render() {\n        let {\n            isOpenFormCategory,\n            onToggleFormCategory,\n            category,\n            onAddCategory,\n            onDeleteCategory,\n            onFilterCategory\n        } = this.props\n        // console.log(category)\n        return (\n            <React.Fragment>\n                <Header/>\n                <Nav match={this.props.match}/>\n                {isOpenFormCategory ? \n                    <CategoryFunc \n                        onToggleFormCategory={onToggleFormCategory}\n                        onAddCategory={onAddCategory}\n                        onToggleFormCategory={onToggleFormCategory}\n                        \n                /> : ''}\n                <div className=\"AdminProducts admin-page\">\n                    <Container>\n                        <React.Fragment>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col className=\"admin-col mb-4 pb-0\">\n                                    <TaskBar\n                                        type=\"Category\"\n                                        onToggleFormCategory={onToggleFormCategory}\n                                        onFilterCategory={onFilterCategory}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row style={{ padding: \"0 15px\" }}>\n                                <Col\n                                    className=\"admin-col p-0\"\n                                    style={{\n                                        overflow: \"auto\",\n                                        maxHeight: \"450px\",\n                                    }}\n                                >\n                                    <Table className=\"admin-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Number</th>\n                                                <th>Category Id</th>\n                                                <th>Category Name</th>\n                                                <th>action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                category.map((category, index) =>\n                                                    <tr key={category._id}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{category._id}</td>\n                                                        <td>{category.name}</td>\n                                                        <td><ButtonDelete type='category' id={category._id} onDeleteCategory={onDeleteCategory}/></td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    </Container>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isOpenFormCategory: state.isOpenFormCategory,\n        category : state.category\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onToggleFormCategory : () => {\n            dispatch(actToggleFormCategory())\n        },\n        onGetAllCategory : () => {\n            dispatch(actGetAllCategoryRequest())\n        },\n        onAddCategory : (data) => {\n            dispatch(actAddCategoryRequest(data))\n        },\n        onDeleteCategory : (id) => {\n            dispatch(actDeleteCategoryRequest(id))\n        },\n        onFilterCategory : (name) => {\n            dispatch(actFilterCategoryAdminRequest(name))\n        }\n        \n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Category);"]},"metadata":{},"sourceType":"module"}