{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/SignUp.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport '../../css/client/Authform.css';\nimport callAPI from '../../utils/apiCaller';\nconst REGEX_EMAIL = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = (name, email, password, address, phone) => {\n      const nameError = this.validateFn(name, 'name') || '';\n      const emailError = this.validateFn(email, 'email') || '';\n      const passwordError = this.validateFn(password, 'password') || '';\n      const addressError = this.validateFn(address, 'address') || '';\n      const phoneError = this.validateFn(phone, 'phone') || '';\n\n      if (nameError || emailError || passwordError || addressError || phoneError) {\n        this.setState({\n          nameErr: nameError,\n          emailErr: emailError,\n          passwordErr: passwordError,\n          addressErr: addressError,\n          phoneErr: phoneError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = e => {\n      let target = e.target;\n      let name = target.name;\n      let value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let {\n        name,\n        email,\n        password,\n        address,\n        phone\n      } = this.state;\n      let isValidate = this.validate(name, email, password, address, phone);\n      let userInfo = {\n        name,\n        email,\n        password,\n        address,\n        phone\n      };\n\n      if (isValidate) {\n        callAPI('api/auth/sign-up', 'POST', userInfo).then(() => {\n          this.props.onOpenFormSignIn();\n        }).catch(error => this.setState({\n          err: error.response.data.message\n        }));\n      }\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      address: '',\n      phone: '',\n      nameErr: '',\n      emailErr: '',\n      passwordErr: '',\n      addressErr: '',\n      phoneErr: '',\n      err: ''\n    };\n  }\n\n  validateFn(input = '', info = '') {\n    if (info === 'phone') {\n      if (!input) {\n        return `The ${info} field is required.`;\n      }\n\n      if (input.length < 10) {\n        return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 10 characters.`;\n      }\n    }\n\n    if (info === 'email') {\n      if (!input) {\n        return `The ${info} field is required.`;\n      }\n\n      let isValidEmail = REGEX_EMAIL.test(input);\n\n      if (!isValidEmail) {\n        return 'Invalid email';\n      }\n    } else {\n      if (!input) {\n        return `The ${info} field is required.`;\n      }\n\n      if (input.length < 6) {\n        return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 6 characters.`;\n      }\n\n      return '';\n    }\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      password,\n      address,\n      phone,\n      nameErr,\n      emailErr,\n      passwordErr,\n      addressErr,\n      phoneErr,\n      err\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Authform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"By signing up, you agree to Pickbazar's\")), err && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"rgb(97, 26, 21)\",\n        backgroundColor: \"rgb(253, 236, 234)\",\n        textAlign: \"center\",\n        padding: \"15px\",\n        borderRadius: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, err), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }), nameErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, nameErr)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"off\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }), emailErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 38\n      }\n    }, emailErr)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      autoComplete: \"off\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }), passwordErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    }, passwordErr)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Address\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n      id: \"address\",\n      type: \"text\",\n      name: \"address\",\n      autoComplete: \"off\",\n      value: address,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), addressErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 40\n      }\n    }, addressErr)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Phone\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"off\",\n      id: \"phone\",\n      type: \"number\",\n      name: \"phone\",\n      value: phone,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), phoneErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 38\n      }\n    }, phoneErr)), /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"Continue\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Already have an account? \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"signin\",\n      onClick: this.props.onOpenFormSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 27\n      }\n    }, \"Sign In\")));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/SignUp.js"],"names":["React","Component","Form","FormGroup","Input","Label","Button","callAPI","REGEX_EMAIL","SignUp","constructor","props","validate","name","email","password","address","phone","nameError","validateFn","emailError","passwordError","addressError","phoneError","setState","nameErr","emailErr","passwordErr","addressErr","phoneErr","handleChange","e","target","value","handleSubmit","preventDefault","state","isValidate","userInfo","then","onOpenFormSignIn","catch","error","err","response","data","message","input","info","length","charAt","toUpperCase","slice","isValidEmail","test","render","color","backgroundColor","textAlign","padding","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,YAAtD;AACA,OAAO,+BAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,MAAMC,WAAW,GAAG,yJAApB;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC3BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgDnBC,QAhDmB,GAgDR,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,OAAxB,EAAiCC,KAAjC,KAA2C;AAClD,YAAMC,SAAS,GAAG,KAAKC,UAAL,CAAgBN,IAAhB,EAAsB,MAAtB,KAAiC,EAAnD;AACA,YAAMO,UAAU,GAAG,KAAKD,UAAL,CAAgBL,KAAhB,EAAuB,OAAvB,KAAmC,EAAtD;AACA,YAAMO,aAAa,GAAG,KAAKF,UAAL,CAAgBJ,QAAhB,EAA0B,UAA1B,KAAyC,EAA/D;AACA,YAAMO,YAAY,GAAG,KAAKH,UAAL,CAAgBH,OAAhB,EAAyB,SAAzB,KAAuC,EAA5D;AACA,YAAMO,UAAU,GAAG,KAAKJ,UAAL,CAAgBF,KAAhB,EAAuB,OAAvB,KAAmC,EAAtD;;AACA,UAAIC,SAAS,IAAIE,UAAb,IAA2BC,aAA3B,IAA4CC,YAA5C,IAA4DC,UAAhE,EAA4E;AACxE,aAAKC,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAEP,SADC;AAEVQ,UAAAA,QAAQ,EAAEN,UAFA;AAGVO,UAAAA,WAAW,EAAEN,aAHH;AAIVO,UAAAA,UAAU,EAAEN,YAJF;AAKVO,UAAAA,QAAQ,EAAEN;AALA,SAAd;AAOA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAjEkB;;AAAA,SAmEnBO,YAnEmB,GAmEHC,CAAD,IAAO;AAClB,UAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACA,UAAInB,IAAI,GAAGmB,MAAM,CAACnB,IAAlB;AACA,UAAIoB,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,WAAKT,QAAL,CAAc;AACV,SAACX,IAAD,GAAQoB;AADE,OAAd;AAGH,KA1EkB;;AAAA,SA2EnBC,YA3EmB,GA2EHH,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACI,cAAF;AACA,UAAI;AAAEtB,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA,OAAzB;AAAkCC,QAAAA;AAAlC,UAA4C,KAAKmB,KAArD;AACA,UAAIC,UAAU,GAAG,KAAKzB,QAAL,CAAcC,IAAd,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,KAA9C,CAAjB;AACA,UAAIqB,QAAQ,GAAG;AACXzB,QAAAA,IADW;AAEXC,QAAAA,KAFW;AAGXC,QAAAA,QAHW;AAIXC,QAAAA,OAJW;AAKXC,QAAAA;AALW,OAAf;;AAOA,UAAIoB,UAAJ,EAAgB;AACZ9B,QAAAA,OAAO,CAAC,kBAAD,EAAqB,MAArB,EAA6B+B,QAA7B,CAAP,CAA8CC,IAA9C,CAAmD,MAAM;AACrD,eAAK5B,KAAL,CAAW6B,gBAAX;AACH,SAFD,EAEGC,KAFH,CAESC,KAAK,IAAI,KAAKlB,QAAL,CAAc;AAC5BmB,UAAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC;AADG,SAAd,CAFlB;AAKH;AACJ,KA7FkB;;AAEf,SAAKV,KAAL,GAAa;AACTvB,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTQ,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,WAAW,EAAE,EARJ;AASTC,MAAAA,UAAU,EAAE,EATH;AAUTC,MAAAA,QAAQ,EAAE,EAVD;AAWTc,MAAAA,GAAG,EAAE;AAXI,KAAb;AAaH;;AAEDxB,EAAAA,UAAU,CAAC4B,KAAK,GAAG,EAAT,EAAaC,IAAI,GAAG,EAApB,EAAwB;AAC9B,QAAIA,IAAI,KAAK,OAAb,EAAsB;AAClB,UAAI,CAACD,KAAL,EAAY;AACR,eAAQ,OAAMC,IAAK,qBAAnB;AACH;;AACD,UAAID,KAAK,CAACE,MAAN,GAAe,EAAnB,EAAuB;AACnB,eAAQ,GAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAc,kCAAvD;AACH;AACJ;;AACD,QAAIJ,IAAI,KAAK,OAAb,EAAsB;AAElB,UAAI,CAACD,KAAL,EAAY;AACR,eAAQ,OAAMC,IAAK,qBAAnB;AACH;;AACD,UAAIK,YAAY,GAAG7C,WAAW,CAAC8C,IAAZ,CAAiBP,KAAjB,CAAnB;;AACA,UAAI,CAACM,YAAL,EAAmB;AACf,eAAO,eAAP;AACH;AACJ,KATD,MAUK;AACD,UAAI,CAACN,KAAL,EAAY;AACR,eAAQ,OAAMC,IAAK,qBAAnB;AACH;;AACD,UAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAClB,eAAQ,GAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAc,iCAAvD;AAEH;;AACD,aAAO,EAAP;AACH;AACJ;;AAgDDG,EAAAA,MAAM,GAAG;AACL,QAAI;AACA1C,MAAAA,IADA;AAEAC,MAAAA,KAFA;AAGAC,MAAAA,QAHA;AAIAC,MAAAA,OAJA;AAKAC,MAAAA,KALA;AAMAQ,MAAAA,OANA;AAOAC,MAAAA,QAPA;AAQAC,MAAAA,WARA;AASAC,MAAAA,UATA;AAUAC,MAAAA,QAVA;AAWAc,MAAAA;AAXA,QAYA,KAAKP,KAZT;AAaA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,CADJ,EAKKO,GAAG,iBAAI;AAAK,MAAA,KAAK,EAAE;AAChBa,QAAAA,KAAK,EAAE,iBADS;AAEhBC,QAAAA,eAAe,EAAE,oBAFD;AAGhBC,QAAAA,SAAS,EAAE,QAHK;AAIhBC,QAAAA,OAAO,EAAE,MAJO;AAKhBC,QAAAA,YAAY,EAAE;AALE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMJjB,GANI,CALZ,eAYI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,MADP;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAC,KAJjB;AAKI,MAAA,KAAK,EAAErB,IALX;AAMI,MAAA,QAAQ,EAAE,KAAKiB,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAaKL,OAAO,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,OAA7B,CAbhB,CADJ,eAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,YAAY,EAAC,KAJjB;AAKI,MAAA,KAAK,EAAEX,KALX;AAMI,MAAA,QAAQ,EAAE,KAAKgB,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAaKJ,QAAQ,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,QAA7B,CAbjB,CAhBJ,eA+BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,YAAY,EAAC,KAJjB;AAKI,MAAA,KAAK,EAAEX,QALX;AAMI,MAAA,QAAQ,EAAE,KAAKe,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAaKH,WAAW,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,WAA7B,CAbpB,CA/BJ,eA8CI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,YAAY,EAAC,KAJjB;AAKI,MAAA,KAAK,EAAEX,OALX;AAMI,MAAA,QAAQ,EAAE,KAAKc,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAaKF,UAAU,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,UAA7B,CAbnB,CA9CJ,eA6DI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAKI,oBAAC,KAAD;AACI,MAAA,YAAY,EAAC,KADjB;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,KAAK,EAAEX,KALX;AAMI,MAAA,QAAQ,EAAE,KAAKa,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAaKD,QAAQ,iBAAI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,QAA7B,CAbjB,CA7DJ,eA4EI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5EJ,CAZJ,eA4FI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEU;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAW6B,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFV,CA5FJ,CADJ;AAmGH;;AAhN0B;;AAmN/B,eAAe/B,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap'\nimport '../../css/client/Authform.css'\nimport callAPI from '../../utils/apiCaller'\nconst REGEX_EMAIL = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nclass SignUp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            address: '',\n            phone: '',\n            nameErr: '',\n            emailErr: '',\n            passwordErr: '',\n            addressErr: '',\n            phoneErr: '',\n            err: ''\n        }\n    }\n\n    validateFn(input = '', info = '') {\n        if (info === 'phone') {\n            if (!input) {\n                return `The ${info} field is required.`\n            }\n            if (input.length < 10) {\n                return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 10 characters.`\n            }\n        }\n        if (info === 'email') {\n\n            if (!input) {\n                return `The ${info} field is required.`\n            }\n            let isValidEmail = REGEX_EMAIL.test(input)\n            if (!isValidEmail) {\n                return 'Invalid email'\n            }\n        }\n        else {\n            if (!input) {\n                return `The ${info} field is required.`\n            }\n            if (input.length < 6) {\n                return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 6 characters.`\n\n            }\n            return '';\n        }\n    }\n\n    validate = (name, email, password, address, phone) => {\n        const nameError = this.validateFn(name, 'name') || '';\n        const emailError = this.validateFn(email, 'email') || '';\n        const passwordError = this.validateFn(password, 'password') || '';\n        const addressError = this.validateFn(address, 'address') || '';\n        const phoneError = this.validateFn(phone, 'phone') || '';\n        if (nameError || emailError || passwordError || addressError || phoneError) {\n            this.setState({\n                nameErr: nameError,\n                emailErr: emailError,\n                passwordErr: passwordError,\n                addressErr: addressError,\n                phoneErr: phoneError\n            })\n            return false\n        }\n        return true\n    }\n\n    handleChange = (e) => {\n        let target = e.target\n        let name = target.name\n        let value = target.value\n        this.setState({\n            [name]: value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let { name, email, password, address, phone } = this.state\n        let isValidate = this.validate(name, email, password, address, phone)\n        let userInfo = {\n            name,\n            email,\n            password,\n            address,\n            phone\n        }\n        if (isValidate) {\n            callAPI('api/auth/sign-up', 'POST', userInfo).then(() => {\n                this.props.onOpenFormSignIn()\n            }).catch(error => this.setState({\n                err: error.response.data.message\n            }))\n        }\n    }\n    render() {\n        let {\n            name,\n            email,\n            password,\n            address,\n            phone,\n            nameErr,\n            emailErr,\n            passwordErr,\n            addressErr,\n            phoneErr,\n            err\n        } = this.state\n        return (\n            <div className=\"Authform\">\n                <div className=\"header\">\n                    <h1>Sign Up</h1>\n                    <p>By signing up, you agree to Pickbazar's</p>\n                </div>\n                {err && <div style={{\n                    color: \"rgb(97, 26, 21)\",\n                    backgroundColor: \"rgb(253, 236, 234)\",\n                    textAlign: \"center\",\n                    padding: \"15px\",\n                    borderRadius: \"4px\"\n                }}>{err}</div>}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">\n                            Name\n                            <span className=\"ml-1 text-danger\">*</span>\n                        </Label>\n                        <Input\n                            id=\"name\"\n                            type=\"text\"\n                            name=\"name\"\n                            autoComplete=\"off\"\n                            value={name}\n                            onChange={this.handleChange}\n                        />\n                        {nameErr && <div className=\"validation\">{nameErr}</div>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"email\">\n                            Email\n                            <span className=\"ml-1 text-danger\">*</span>\n                        </Label>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            autoComplete=\"off\"\n                            value={email}\n                            onChange={this.handleChange}\n                        />\n                        {emailErr && <div className=\"validation\">{emailErr}</div>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">\n                            Password\n                            <span className=\"ml-1 text-danger\">*</span>\n                        </Label>\n                        <Input\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            autoComplete=\"off\"\n                            value={password}\n                            onChange={this.handleChange}\n                        />\n                        {passwordErr && <div className=\"validation\">{passwordErr}</div>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"address\">\n                            Address\n                            <span className=\"ml-1 text-danger\">*</span>\n                        </Label>\n                        <Input\n                            id=\"address\"\n                            type=\"text\"\n                            name=\"address\"\n                            autoComplete=\"off\"\n                            value={address}\n                            onChange={this.handleChange}\n                        />\n                        {addressErr && <div className=\"validation\">{addressErr}</div>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"phone\">\n                            Phone\n                            <span className=\"ml-1 text-danger\">*</span>\n                        </Label>\n                        <Input\n                            autoComplete=\"off\"\n                            id=\"phone\"\n                            type=\"number\"\n                            name=\"phone\"\n                            value={phone}\n                            onChange={this.handleChange}\n                        />\n                        {phoneErr && <div className=\"validation\">{phoneErr}</div>}\n                    </FormGroup>\n                    <Button size=\"lg\" block type=\"submit\">\n                        Continue\n                    </Button>\n                </Form>\n                <div className=\"footer\">\n                    Already have an account?\n                    &nbsp;<span className=\"signin\" onClick={this.props.onOpenFormSignIn}>Sign In</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}