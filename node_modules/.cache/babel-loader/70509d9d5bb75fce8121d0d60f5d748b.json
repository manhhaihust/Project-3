{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/SignIn.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { actOpenFormSignUp } from '../../actions/index';\nimport '../../css/client/Authform.css';\nimport callApi from '../../utils/apiCaller'; // import { Redirect } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\nclass SignIn extends Component {\n  constructor(pros) {\n    super(pros);\n\n    this.validate = (email, password) => {\n      let emailError = '';\n      let passwordError = '';\n\n      if (!email) {\n        emailError = 'The email field is required.';\n      }\n\n      if (!password) {\n        passwordError = 'The password field is required.';\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailErr: emailError,\n          passwordErr: passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onHandleChange = e => {\n      let target = e.target;\n      let name = target.name;\n      let value = target.value;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.email, this.state.password);\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let {\n        email,\n        password\n      } = this.state;\n      let isValidate = this.validate(email, password);\n\n      if (isValidate) {\n        let account = {\n          email,\n          password\n        }; // this.props.onLogin(account)\n\n        callApi('api/auth/sign-in', 'POST', account).then(res => {\n          this.props.onLogin(res.data); // res.data = user\n\n          this.props.onCloseModal();\n        }).catch(error => this.setState({\n          err: error.response.data.message\n        }));\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      emailErr: '',\n      passwordErr: '',\n      err: ''\n    };\n  }\n\n  render() {\n    let {\n      email,\n      password,\n      emailErr,\n      passwordErr,\n      err\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Authform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Welcome Back\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Login with your email & password\")), err && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"rgb(97, 26, 21)\",\n        backgroundColor: \"rgb(253, 236, 234)\",\n        textAlign: \"center\",\n        padding: \"15px\",\n        borderRadius: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, err), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"Email\",\n      placeholder: \"EX: doanhtuan@gmail.com\",\n      value: email,\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }), emailErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }\n    }, emailErr)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"Password\",\n      placeholder: \"EX: tuan123\",\n      value: password,\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }), passwordErr && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"validation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, passwordErr)), /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      type: \"submit\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Continue\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Don't have an account? \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"signup\",\n      onClick: this.props.onOpenFormSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }, \"Sign up\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOpenFormSignUp: () => {\n      dispatch(actOpenFormSignUp());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/SignIn.js"],"names":["React","Component","Form","FormGroup","Label","Input","Button","connect","actOpenFormSignUp","callApi","SignIn","constructor","pros","validate","email","password","emailError","passwordError","setState","emailErr","passwordErr","onHandleChange","e","target","name","value","console","log","state","onSubmit","preventDefault","isValidate","account","then","res","props","onLogin","data","onCloseModal","catch","error","err","response","message","render","color","backgroundColor","textAlign","padding","borderRadius","onOpenFormSignUp","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { actOpenFormSignUp } from '../../actions/index'\nimport '../../css/client/Authform.css'\nimport callApi from '../../utils/apiCaller'\n// import { Redirect } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\nclass SignIn extends Component {\n    constructor(pros) {\n        super(pros)\n        this.state = {\n            email: '',\n            password: '',\n            emailErr: '',\n            passwordErr: '',\n            err: ''\n        }\n    }\n\n    validate = (email, password) => {\n        let emailError = '';\n        let passwordError = '';\n\n        if (!email) {\n            emailError = 'The email field is required.'\n        }\n        if (!password) {\n            passwordError = 'The password field is required.'\n        }\n\n        if (emailError || passwordError) {\n            this.setState({\n                emailErr: emailError,\n                passwordErr: passwordError\n            })\n            return false;\n        }\n        return true;\n    }\n\n    onHandleChange = (e) => {\n        let target = e.target\n        let name = target.name\n        let value = target.value\n        this.setState({\n            [name]: value\n        })\n        console.log(this.state.email, this.state.password)\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        let { email, password } = this.state\n        let isValidate = this.validate(email, password)\n        if (isValidate) {\n            let account = {\n                email,\n                password\n            }\n            // this.props.onLogin(account)\n            callApi('api/auth/sign-in', 'POST', account).then(res => {\n                this.props.onLogin(res.data) // res.data = user\n                this.props.onCloseModal()\n\n            }).catch(error => this.setState({\n                err: error.response.data.message\n            }))\n        }\n\n    }\n\n    render() {\n        let { email, password, emailErr, passwordErr, err } = this.state\n        return (\n            <div className=\"Authform\">\n                <div className='header'>\n                    <h1>Welcome Back</h1>\n                    <p>Login with your email & password</p>\n                </div>\n                {err && <div style={{\n                    color: \"rgb(97, 26, 21)\",\n                    backgroundColor: \"rgb(253, 236, 234)\",\n                    textAlign: \"center\",\n                    padding: \"15px\",\n                    borderRadius: \"4px\"\n                }}>{err}</div>}\n                <Form onSubmit={this.onSubmit}>\n                    <FormGroup>\n                        <Label for=\"Email\">Email</Label>\n                        <Input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"EX: doanhtuan@gmail.com\" value={email} onChange={this.onHandleChange} />\n                        {emailErr && <div className=\"validation\">{emailErr}</div>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"Password\">Password</Label>\n                        <Input type=\"password\" name=\"password\" id=\"Password\" placeholder=\"EX: tuan123\" value={password} onChange={this.onHandleChange} />\n                        {passwordErr && <div className=\"validation\">{passwordErr}</div>}\n                    </FormGroup>\n                    <Button size=\"lg\" block type=\"submit\" className=\"btn\">Continue</Button>\n                </Form>\n                <div className=\"footer\">\n                    Don't have an account?\n                    &nbsp;<span className=\"signup\" onClick={this.props.onOpenFormSignUp}>Sign up</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onOpenFormSignUp: () => {\n            dispatch(actOpenFormSignUp())\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}