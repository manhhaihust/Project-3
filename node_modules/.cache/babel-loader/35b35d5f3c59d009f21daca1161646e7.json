{"ast":null,"code":"var _jsxFileName = \"/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/CheckoutForm.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport '../../css/client/CheckoutForm.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCreditCard, faMoneyBillAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Redirect } from 'react-router-dom';\nimport callApi from '../../utils/apiCaller';\nimport axios from 'axios';\n\nclass CheckoutForm extends Component {\n  constructor(pros) {\n    super(pros);\n\n    this.totalPrice = cart => {\n      let totalPrice = null;\n      cart.forEach(element => {\n        totalPrice += element.product.price * element.quantity;\n      });\n      return totalPrice;\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n      let order = { ...this.state\n      };\n      delete order.redirect;\n      delete order.id;\n      delete order.error; // this.props.onCreateOrder(order)\n\n      if (order.payment === 'cash') {\n        let res = await callApi('api/order', 'POST', order);\n        console.log(res.data);\n        let id = res.data._id;\n        this.props.onCreateOrder(res.data);\n        this.props.onRemoveAllCart();\n        localStorage.removeItem('cart');\n        this.props.onCloseCartItem();\n        this.setState({\n          id: id,\n          redirect: true\n        });\n      }\n\n      if (order.payment === 'card') {\n        const {\n          error,\n          paymentMethod\n        } = await stripe.createPaymentMethod({\n          type: 'card',\n          card: elements.getElement(CardElement)\n        });\n\n        if (!error) {\n          // console.log(paymentMethod)\n          // const { id } = paymentMethod\n          // const { data } = await axios.post('http://localhost:9000/api/charge', { id, amount: order.totalPrice * 100, order })\n          // console.log(data)\n          // if (data) {\n          //     let res = await callApi('api/order', 'POST', order)\n          //     let id = res.data._id\n          //     this.props.onCreateOrder(res.data)\n          //     this.setState({\n          //         id: id,\n          //         redirect: true\n          //     })\n          // }\n          // else {\n          //     this.setState({\n          //         error: true\n          //     })\n          // }\n          try {\n            const {\n              id\n            } = paymentMethod;\n            await axios.post('http://localhost:9000/api/charge', {\n              id,\n              amount: order.totalPrice * 100,\n              order\n            });\n            let res = await callApi('api/order', 'POST', order);\n            let id_neworder = res.data._id;\n            this.props.onCreateOrder(res.data);\n            this.props.onRemoveAllCart();\n            localStorage.removeItem('cart');\n            this.props.onCloseCartItem();\n            this.setState({\n              id: id_neworder,\n              redirect: true\n            });\n          } catch (error) {\n            console.log(error);\n            this.setState({\n              error: error.response.data.message\n            });\n          }\n        }\n      }\n    };\n\n    this.onHandleInput = e => {\n      let target = e.target;\n      let name = target.name;\n      let value = target.value;\n      this.setState({\n        [name]: value\n      }); // console.log(this.state)\n    };\n\n    this.totalQuantity = cart => {\n      let totalQuantity = null;\n      cart.forEach(element => {\n        totalQuantity += element.quantity;\n      });\n      return totalQuantity;\n    };\n\n    this.totalPrice = cart => {\n      let totalPrice = null;\n      cart.forEach(element => {\n        totalPrice += element.product.price * element.quantity;\n      });\n      return totalPrice;\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      address: '',\n      phone: '',\n      payment: '',\n      date: '',\n      totalPrice: '',\n      cartItem: '',\n      redirect: false,\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    let today = new Date();\n    let date = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n    let totalPrice = this.totalPrice(this.props.cart);\n    let cart = this.props.cart;\n    let {\n      name,\n      email,\n      address,\n      phone\n    } = this.props.user;\n    this.setState({\n      name: name,\n      email: email,\n      address: address,\n      phone: phone,\n      date: date,\n      totalPrice: totalPrice,\n      cartItem: cart\n    });\n  }\n\n  render() {\n    const {\n      stripe\n    } = this.props;\n    let {\n      payment,\n      redirect,\n      id,\n      error\n    } = this.state;\n    let {\n      user,\n      cart\n    } = this.props; // console.log(user)\n    // console.log(this.state) \n\n    if (redirect === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/order-received/${id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkout-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Your order\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, \"Sub Total(\", this.totalQuantity(cart), \")\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"$\", this.totalPrice(cart))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, \"Shipping Free\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"$0.00\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"$\", this.totalPrice(cart)))), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"billing-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"bt-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, \"Billing Address\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      id: \"name\",\n      autoComplete: \"off\",\n      value: user.name,\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: user.email,\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      id: \"address\",\n      value: user.address,\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phone\",\n      id: \"phone\",\n      value: user.phone,\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"bt-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Select Payment Option\"), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"d-flex justify-content-between mb-3 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      id: \"cash\",\n      name: \"payment\",\n      value: \"cash\",\n      onChange: this.onHandleInput,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }), ' ', /*#__PURE__*/React.createElement(Label, {\n      for: \"cash\",\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faMoneyBillAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"Cash\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      id: \"card\",\n      name: \"payment\",\n      value: \"card\",\n      onChange: this.onHandleInput,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }), ' ', /*#__PURE__*/React.createElement(Label, {\n      for: \"card\",\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCreditCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, \"Card\")))), payment === 'card' && /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 44\n      }\n    }), error && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red',\n        textAlign: \"center\",\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 31\n      }\n    }, error), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn w-100\",\n      disabled: !stripe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \"Proceed to Checkout\")));\n  }\n\n}\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/Users/manhhaihust/Desktop/project44/Project-3/src/components/client/CheckoutForm.js"],"names":["React","Component","Form","FormGroup","Label","Input","Button","FontAwesomeIcon","faCreditCard","faMoneyBillAlt","CardElement","Redirect","callApi","axios","CheckoutForm","constructor","pros","totalPrice","cart","forEach","element","product","price","quantity","handleSubmit","event","preventDefault","stripe","elements","props","order","state","redirect","id","error","payment","res","console","log","data","_id","onCreateOrder","onRemoveAllCart","localStorage","removeItem","onCloseCartItem","setState","paymentMethod","createPaymentMethod","type","card","getElement","post","amount","id_neworder","response","message","onHandleInput","e","target","name","value","totalQuantity","email","address","phone","date","cartItem","componentDidMount","today","Date","getFullYear","getMonth","getDate","user","render","color","textAlign","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,YAAtD;AACA,OAAO,mCAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mCAA7C;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AACjCc,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMA,IAAN;;AADc,SAiBlBC,UAjBkB,GAiBJC,IAAD,IAAU;AACnB,UAAID,UAAU,GAAG,IAAjB;AACAC,MAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpBH,QAAAA,UAAU,IAAIG,OAAO,CAACC,OAAR,CAAgBC,KAAhB,GAAwBF,OAAO,CAACG,QAA9C;AACH,OAFD;AAGA,aAAON,UAAP;AACH,KAvBiB;;AAAA,SA0ClBO,YA1CkB,GA0CH,MAAOC,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAuB,KAAKC,KAAlC;AACA,UAAIC,KAAK,GAAG,EAAE,GAAG,KAAKC;AAAV,OAAZ;AACA,aAAOD,KAAK,CAACE,QAAb;AACA,aAAOF,KAAK,CAACG,EAAb;AACA,aAAOH,KAAK,CAACI,KAAb,CAN4B,CAO5B;;AAEA,UAAIJ,KAAK,CAACK,OAAN,KAAkB,MAAtB,EAA8B;AAC1B,YAAIC,GAAG,GAAG,MAAMxB,OAAO,CAAC,WAAD,EAAc,MAAd,EAAsBkB,KAAtB,CAAvB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,YAAIN,EAAE,GAAGG,GAAG,CAACG,IAAJ,CAASC,GAAlB;AACA,aAAKX,KAAL,CAAWY,aAAX,CAAyBL,GAAG,CAACG,IAA7B;AACA,aAAKV,KAAL,CAAWa,eAAX;AACAC,QAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,aAAKf,KAAL,CAAWgB,eAAX;AACA,aAAKC,QAAL,CAAc;AACVb,UAAAA,EAAE,EAAEA,EADM;AAEVD,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH;;AAED,UAAIF,KAAK,CAACK,OAAN,KAAkB,MAAtB,EAA8B;AAC1B,cAAM;AAAED,UAAAA,KAAF;AAASa,UAAAA;AAAT,YAA2B,MAAMpB,MAAM,CAACqB,mBAAP,CAA2B;AAC9DC,UAAAA,IAAI,EAAE,MADwD;AAE9DC,UAAAA,IAAI,EAAEtB,QAAQ,CAACuB,UAAT,CAAoBzC,WAApB;AAFwD,SAA3B,CAAvC;;AAIA,YAAI,CAACwB,KAAL,EAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAI;AACA,kBAAM;AAAED,cAAAA;AAAF,gBAASc,aAAf;AACA,kBAAMlC,KAAK,CAACuC,IAAN,CAAW,kCAAX,EAA+C;AAAEnB,cAAAA,EAAF;AAAMoB,cAAAA,MAAM,EAAEvB,KAAK,CAACb,UAAN,GAAmB,GAAjC;AAAsCa,cAAAA;AAAtC,aAA/C,CAAN;AACA,gBAAIM,GAAG,GAAG,MAAMxB,OAAO,CAAC,WAAD,EAAc,MAAd,EAAsBkB,KAAtB,CAAvB;AACA,gBAAIwB,WAAW,GAAGlB,GAAG,CAACG,IAAJ,CAASC,GAA3B;AACA,iBAAKX,KAAL,CAAWY,aAAX,CAAyBL,GAAG,CAACG,IAA7B;AACA,iBAAKV,KAAL,CAAWa,eAAX;AACAC,YAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,iBAAKf,KAAL,CAAWgB,eAAX;AACA,iBAAKC,QAAL,CAAc;AACVb,cAAAA,EAAE,EAAEqB,WADM;AAEVtB,cAAAA,QAAQ,EAAE;AAFA,aAAd;AAIH,WAbD,CAaE,OAAOE,KAAP,EAAc;AACZG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,iBAAKY,QAAL,CAAc;AACVZ,cAAAA,KAAK,EAAEA,KAAK,CAACqB,QAAN,CAAehB,IAAf,CAAoBiB;AADjB,aAAd;AAGH;AACJ;AACJ;AACJ,KA9GiB;;AAAA,SAiHlBC,aAjHkB,GAiHDC,CAAD,IAAO;AACnB,UAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACA,UAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,UAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;AACA,WAAKf,QAAL,CAAc;AACV,SAACc,IAAD,GAAQC;AADE,OAAd,EAJmB,CAOnB;AACH,KAzHiB;;AAAA,SA2HlBC,aA3HkB,GA2HD5C,IAAD,IAAU;AACtB,UAAI4C,aAAa,GAAG,IAApB;AACA5C,MAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpB0C,QAAAA,aAAa,IAAI1C,OAAO,CAACG,QAAzB;AACH,OAFD;AAGA,aAAOuC,aAAP;AACH,KAjIiB;;AAAA,SAkIlB7C,UAlIkB,GAkIJC,IAAD,IAAU;AACnB,UAAID,UAAU,GAAG,IAAjB;AACAC,MAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpBH,QAAAA,UAAU,IAAIG,OAAO,CAACC,OAAR,CAAgBC,KAAhB,GAAwBF,OAAO,CAACG,QAA9C;AACH,OAFD;AAGA,aAAON,UAAP;AACH,KAxIiB;;AAEd,SAAKc,KAAL,GAAa;AACTE,MAAAA,EAAE,EAAE,EADK;AAET2B,MAAAA,IAAI,EAAE,EAFG;AAGTG,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMT9B,MAAAA,OAAO,EAAE,EANA;AAOT+B,MAAAA,IAAI,EAAE,EAPG;AAQTjD,MAAAA,UAAU,EAAE,EARH;AASTkD,MAAAA,QAAQ,EAAE,EATD;AAUTnC,MAAAA,QAAQ,EAAE,KAVD;AAWTE,MAAAA,KAAK,EAAE;AAXE,KAAb;AAaH;;AAUDkC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIJ,IAAI,GAAI,GAAEG,KAAK,CAACE,WAAN,EAAoB,IAAGF,KAAK,CAACG,QAAN,KAAmB,CAAE,IAAGH,KAAK,CAACI,OAAN,EAAgB,EAA7E;AACA,QAAIxD,UAAU,GAAG,KAAKA,UAAL,CAAgB,KAAKY,KAAL,CAAWX,IAA3B,CAAjB;AACA,QAAIA,IAAI,GAAG,KAAKW,KAAL,CAAWX,IAAtB;AACA,QAAI;AAAE0C,MAAAA,IAAF;AAAQG,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKpC,KAAL,CAAW6C,IAAjD;AACA,SAAK5B,QAAL,CAAc;AACVc,MAAAA,IAAI,EAAEA,IADI;AAEVG,MAAAA,KAAK,EAAEA,KAFG;AAGVC,MAAAA,OAAO,EAAEA,OAHC;AAIVC,MAAAA,KAAK,EAAEA,KAJG;AAKVC,MAAAA,IAAI,EAAEA,IALI;AAMVjD,MAAAA,UAAU,EAAEA,UANF;AAOVkD,MAAAA,QAAQ,EAAEjD;AAPA,KAAd;AASH;;AAkGDyD,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhD,MAAAA;AAAF,QAAa,KAAKE,KAAxB;AACA,QAAI;AAAEM,MAAAA,OAAF;AAAWH,MAAAA,QAAX;AAAqBC,MAAAA,EAArB;AAAyBC,MAAAA;AAAzB,QAAmC,KAAKH,KAA5C;AACA,QAAI;AAAE2C,MAAAA,IAAF;AAAQxD,MAAAA;AAAR,QAAiB,KAAKW,KAA1B,CAHK,CAIL;AACA;;AACA,QAAIG,QAAQ,KAAK,IAAjB,EAAuB;AACnB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAG,mBAAkBC,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkC,KAAK6B,aAAL,CAAmB5C,IAAnB,CAAlC,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyB,KAAKD,UAAL,CAAgBC,IAAhB,CAAzB,CAFJ,CAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CANJ,eAUI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyB,KAAKD,UAAL,CAAgBC,IAAhB,CAAzB,CAFJ,CAVJ,CADJ,eAgBI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKM,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,YAAY,EAAC,KAAtD;AAA4D,MAAA,KAAK,EAAEkD,IAAI,CAACd,IAAxE;AAA8E,MAAA,QAAQ,EAAE,KAAKH,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAA4C,MAAA,KAAK,EAAEiB,IAAI,CAACX,KAAxD;AAA+D,MAAA,QAAQ,EAAE,KAAKN,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,eAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,EAAE,EAAC,SAArC;AAA+C,MAAA,KAAK,EAAEiB,IAAI,CAACV,OAA3D;AAAoE,MAAA,QAAQ,EAAE,KAAKP,aAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,eAkCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAEiB,IAAI,CAACT,KAAvD;AAA8D,MAAA,QAAQ,EAAE,KAAKR,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAlCJ,CADJ,eAwCI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,yCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,KAAK,EAAC,MAJV;AAKI,MAAA,QAAQ,EAAE,KAAKA,aALnB;AAMI,MAAA,YAAY,EAAC,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQO,GARP,eASI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAkB,MAAA,KAAK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEhD,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CATJ,eAaI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,KAAK,EAAC,MAJV;AAKI,MAAA,QAAQ,EAAE,KAAKgD,aALnB;AAMI,MAAA,YAAY,EAAC,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAoBO,GApBP,eAqBI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAkB,MAAA,KAAK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEjD,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CArBJ,CAFJ,CAxCJ,EAqEK2B,OAAO,KAAK,MAAZ,iBAAsB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArE3B,EAsEKD,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAE0C,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,SAAS,EAAE,QAA3B;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoE5C,KAApE,CAtEd,eAuEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,WAAhC;AAA4C,MAAA,QAAQ,EAAE,CAACP,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAvEJ,CAhBJ,CADJ;AA6FH;;AAjPgC;;AAoPrC,eAAeb,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\nimport '../../css/client/CheckoutForm.css'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCreditCard, faMoneyBillAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Redirect } from 'react-router-dom'\nimport callApi from '../../utils/apiCaller';\nimport axios from 'axios'\n\n\nclass CheckoutForm extends Component {\n    constructor(pros) {\n        super(pros)\n        this.state = {\n            id: '',\n            name: '',\n            email: '',\n            address: '',\n            phone: '',\n            payment: '',\n            date: '',\n            totalPrice: '',\n            cartItem: '',\n            redirect: false,\n            error: ''\n        }\n    }\n\n    totalPrice = (cart) => {\n        let totalPrice = null\n        cart.forEach(element => {\n            totalPrice += element.product.price * element.quantity\n        });\n        return totalPrice\n    }\n\n    componentDidMount() {\n        let today = new Date()\n        let date = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`\n        let totalPrice = this.totalPrice(this.props.cart)\n        let cart = this.props.cart\n        let { name, email, address, phone } = this.props.user\n        this.setState({\n            name: name,\n            email: email,\n            address: address,\n            phone: phone,\n            date: date,\n            totalPrice: totalPrice,\n            cartItem: cart,\n        })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const { stripe, elements } = this.props;\n        let order = { ...this.state }\n        delete order.redirect\n        delete order.id\n        delete order.error\n        // this.props.onCreateOrder(order)\n\n        if (order.payment === 'cash') {\n            let res = await callApi('api/order', 'POST', order)\n            console.log(res.data)\n            let id = res.data._id\n            this.props.onCreateOrder(res.data)\n            this.props.onRemoveAllCart()\n            localStorage.removeItem('cart')\n            this.props.onCloseCartItem()\n            this.setState({\n                id: id,\n                redirect: true\n            })\n        }\n\n        if (order.payment === 'card') {\n            const { error, paymentMethod } = await stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement),\n            });\n            if (!error) {\n                // console.log(paymentMethod)\n                // const { id } = paymentMethod\n                // const { data } = await axios.post('http://localhost:9000/api/charge', { id, amount: order.totalPrice * 100, order })\n                // console.log(data)\n                // if (data) {\n                //     let res = await callApi('api/order', 'POST', order)\n                //     let id = res.data._id\n                //     this.props.onCreateOrder(res.data)\n                //     this.setState({\n                //         id: id,\n                //         redirect: true\n                //     })\n                // }\n                // else {\n                //     this.setState({\n                //         error: true\n                //     })\n                // }\n                try {\n                    const { id } = paymentMethod\n                    await axios.post('http://localhost:9000/api/charge', { id, amount: order.totalPrice * 100, order })\n                    let res = await callApi('api/order', 'POST', order)\n                    let id_neworder = res.data._id\n                    this.props.onCreateOrder(res.data)\n                    this.props.onRemoveAllCart()\n                    localStorage.removeItem('cart')\n                    this.props.onCloseCartItem()\n                    this.setState({\n                        id: id_neworder,\n                        redirect: true\n                    })\n                } catch (error) {\n                    console.log(error)\n                    this.setState({\n                        error: error.response.data.message\n                    })\n                }\n            }\n        }\n    };\n\n\n    onHandleInput = (e) => {\n        let target = e.target\n        let name = target.name\n        let value = target.value\n        this.setState({\n            [name]: value\n        })\n        // console.log(this.state)\n    }\n\n    totalQuantity = (cart) => {\n        let totalQuantity = null\n        cart.forEach(element => {\n            totalQuantity += element.quantity\n        });\n        return totalQuantity\n    }\n    totalPrice = (cart) => {\n        let totalPrice = null\n        cart.forEach(element => {\n            totalPrice += element.product.price * element.quantity\n        });\n        return totalPrice\n    }\n\n    render() {\n        const { stripe } = this.props;\n        let { payment, redirect, id, error } = this.state\n        let { user, cart } = this.props\n        // console.log(user)\n        // console.log(this.state) \n        if (redirect === true) {\n            return <Redirect to={`/order-received/${id}`} />\n        }\n        return (\n            <div className=\"checkout-form\">\n                <div className='order-info'>\n                    <h3>Your order</h3>\n                    <div className=\"item\">\n                        <div className=\"title\">Sub Total({this.totalQuantity(cart)})</div>\n                        <div className=\"price\">${this.totalPrice(cart)}</div>\n                    </div>\n                    <div className=\"item\">\n                        <div className=\"title\">Shipping Free</div>\n                        <div className=\"price\">$0.00</div>\n                    </div>\n                    <div className=\"item\">\n                        <div className=\"title\">Total</div>\n                        <div className=\"price\">${this.totalPrice(cart)}</div>\n                    </div>\n                </div>\n                <Form onSubmit={this.handleSubmit}>\n                    <div className=\"billing-address\">\n                        <h3 className=\"bt-header\">Billing Address</h3>\n                        <FormGroup>\n                            <Label for=\"name\">Name</Label>\n                            <Input type=\"text\" name=\"text\" id=\"name\" autoComplete=\"off\" value={user.name} onChange={this.onHandleInput} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={user.email} onChange={this.onHandleInput} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"address\">Address</Label>\n                            <Input type=\"text\" name=\"address\" id=\"address\" value={user.address} onChange={this.onHandleInput} />\n                        </FormGroup>\n                        {/* <FormGroup>\n                            <Label for=\"city\">City</Label>\n                            <Input type=\"select\" name=\"select\" id=\"city\" value={city}>\n                                <option>Tỉnh/Thành Phố</option>\n                                <option>Hà Nội</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"district\">District</Label>\n                            <Input type=\"select\" name=\"select\" id=\"distric\" value={district}>\n                                <option>Quận/Huyện</option>\n                                <option>Hai Bà Trưng</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Input>\n                        </FormGroup> */}\n                        <FormGroup>\n                            <Label for=\"phone\">Phone</Label>\n                            <Input type=\"text\" name=\"phone\" id=\"phone\" value={user.phone} onChange={this.onHandleInput} />\n                        </FormGroup>\n                    </div>\n                    <div className=\"payment\">\n                        <h3 className=\"bt-header\">Select Payment Option</h3>\n                        <FormGroup className=\"d-flex justify-content-between mb-3 p-0\">\n                            <Input\n                                type=\"radio\"\n                                id=\"cash\"\n                                name=\"payment\"\n                                value=\"cash\"\n                                onChange={this.onHandleInput}\n                                autoComplete=\"off\"\n                            />{' '}\n                            <Label for=\"cash\" check>\n                                <FontAwesomeIcon icon={faMoneyBillAlt} />\n                                <span>Cash</span>\n                            </Label>\n                            <Input\n                                type=\"radio\"\n                                id=\"card\"\n                                name=\"payment\"\n                                value=\"card\"\n                                onChange={this.onHandleInput}\n                                autoComplete=\"off\"\n                            />{' '}\n                            <Label for=\"card\" check>\n                                <FontAwesomeIcon icon={faCreditCard} />\n                                <span>Card</span>\n                            </Label>\n                        </FormGroup>\n                    </div>\n                    {payment === 'card' && <CardElement />}\n                    {error && <p style={{ color: 'red', textAlign: \"center\", marginTop: \"5px\" }}>{error}</p>}\n                    <Button type=\"submit\" className=\"btn w-100\" disabled={!stripe}>Proceed to Checkout</Button>\n                </Form>\n            </div>\n\n        )\n    }\n}\n\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}